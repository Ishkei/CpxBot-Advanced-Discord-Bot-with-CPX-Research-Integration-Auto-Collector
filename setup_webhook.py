#!/usr/bin/env python3
"""
Discord Webhook Setup Helper

This script helps you set up Discord webhooks for your Survey Bot.
"""

import os
import requests
from pathlib import Path

def create_webhook_guide():
    """Display step-by-step webhook creation guide."""
    print("üîó Discord Webhook Setup Guide")
    print("=" * 50)
    print()
    print("üìã Step-by-Step Instructions:")
    print()
    print("1Ô∏è‚É£  Go to your Discord server")
    print("2Ô∏è‚É£  Right-click on the channel where you want notifications")
    print("3Ô∏è‚É£  Select 'Edit Channel'")
    print("4Ô∏è‚É£  Go to the 'Integrations' tab")
    print("5Ô∏è‚É£  Click 'Create Webhook'")
    print("6Ô∏è‚É£  Give it a name (e.g., 'Survey Bot Notifications')")
    print("7Ô∏è‚É£  Copy the Webhook URL")
    print("8Ô∏è‚É£  Paste it in your .env file")
    print()
    print("üìù Example Webhook URL format:")
    print("https://discord.com/api/webhooks/123456789012345678/abcdefghijklmnopqrstuvwxyz1234567890")
    print()
    print("üí° What you'll get notifications for:")
    print("   ‚Ä¢ Survey completions")
    print("   ‚Ä¢ Earnings updates")
    print("   ‚Ä¢ Error reports")
    print("   ‚Ä¢ System status")
    print("   ‚Ä¢ Withdrawal confirmations")
    print()

def test_webhook(webhook_url):
    """Test if a webhook URL is valid."""
    try:
        # Test the webhook with a simple message
        data = {
            "content": "üîî Survey Bot webhook test successful!",
            "username": "Survey Bot",
            "avatar_url": "https://cdn.discordapp.com/emojis/1234567890.png"
        }
        
        response = requests.post(webhook_url, json=data)
        
        if response.status_code == 204:
            print("‚úÖ Webhook test successful!")
            return True
        else:
            print(f"‚ùå Webhook test failed: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error testing webhook: {e}")
        return False

def check_env_file():
    """Check if .env file exists and has webhook URL."""
    env_file = Path(".env")
    
    if not env_file.exists():
        print("‚ùå .env file not found!")
        print("Please copy env.example to .env and configure it.")
        return False
    
    with open(env_file, "r") as f:
        content = f.read()
        
    if "DISCORD_WEBHOOK_URL" in content:
        # Extract the webhook URL
        for line in content.split("\n"):
            if line.startswith("DISCORD_WEBHOOK_URL="):
                webhook_url = line.split("=", 1)[1].strip()
                if webhook_url and webhook_url != "your_discord_webhook_url_here":
                    print(f"üîó Found webhook URL: {webhook_url[:50]}...")
                    return webhook_url
                else:
                    print("‚ö†Ô∏è  Webhook URL not configured in .env file")
                    return None
    
    print("‚ùå DISCORD_WEBHOOK_URL not found in .env file")
    return None

def main():
    """Main function."""
    print("ü§ñ Survey Bot Webhook Setup")
    print("=" * 40)
    print()
    
    # Show setup guide
    create_webhook_guide()
    
    # Check current configuration
    webhook_url = check_env_file()
    
    if webhook_url:
        print("üß™ Testing webhook...")
        if test_webhook(webhook_url):
            print("üéâ Your webhook is working correctly!")
        else:
            print("‚ö†Ô∏è  Webhook test failed. Please check your URL.")
    else:
        print("üìù Please set up your webhook URL in the .env file")
        print("   Format: DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...")
    
    print()
    print("üìö For more help, check the README.md file")

if __name__ == "__main__":
    main() 